using UnityEngine;
using System.Collections;

public class PhantomTempleMapCreate2D : MonoBehaviour {

	#region 変数宣言
	// 配置するマップの画像 (オブジェクト)
	public GameObject[] MapMaterial;

	// マップ配置用変数
	private float MapMaterialSize = 0.64f;	// １画像のサイズ
	private float x = 0;
	public  float SetStartY = 0;
	#endregion

	// マップ作成
	public int[][] MapData = new int[][]{
		new int[] { 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] { 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 6, 0, 0, 0, 4, 5, 6, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] { 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 9, 0, 0, 0, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] {10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0, 0, 0, 0, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] {13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] { 1, 2, 3,22,23,24, 1, 2, 3,22,23,24, 1, 2, 3,22,23,24, 1, 2, 3,22,23,24, 1, 2, 3,22,23,24, 1, 2, 3,22,23,24, 1, 2, 3,22,23,24, 1, 2, 3,22,23,24, 1, 2, 3,22,23,24, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3,22,23,24, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] { 4, 5, 6,25,26,27, 4, 5, 6,25,26,27, 4, 5, 6,25,26,27, 4, 5, 6,25,26,27, 4, 5, 6,25,26,27, 4, 5, 6,25,26,27, 4, 5, 6,25,26,27, 4, 5, 6,25,26,27, 4, 5, 6,25,26,27, 4, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 6,25,26,27, 4, 5, 6, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] { 7, 8, 9,28,29,30, 7, 8, 9,28,29,30, 7, 8, 9,28,29,30, 7, 8, 9,28,29,30, 7, 8, 9,28,29,30, 7, 8, 9,28,29,30, 7, 8, 9,28,29,30, 7, 8, 9,28,29,30, 7, 8, 9,28,29,30, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 9,28,29,30, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] {10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0, 0, 0, 0, 0, 0, 0,10,11,12, 0, 0, 0,10,11,12, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] {13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,14,15, 0, 0, 0,13,14,15, 0, 0, 0, 0, 0, 0, 0,31,32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
		new int[] {16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16, 0, 0, 0, 0, 0, 0, 0, 0, 0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16, },
		new int[] {17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19, 0, 0, 0, 0, 0, 0, 0, 0, 0,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19, },
		new int[] {20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21,20, 0,21, },
	};

	void Start () {

		#region マップ生成
		//--- マップ生成 ---//
		foreach (int[] MapDataArray in MapData)
		{
			foreach (int i in MapDataArray)
			{
				// 配列に従ってマップ生成”（Clone)”の文字は消去
				var obj = Instantiate(MapMaterial[i], new Vector3(x * MapMaterialSize, -SetStartY * MapMaterialSize, 0), Quaternion.identity);
				obj.name = MapMaterial[i].name;
				x++;
			}
			x = 0;
			SetStartY++;
		}
		#endregion
	}
}
